{
  "modules": [
    {
      "name": "mq",
      "chnname": "队列管理",
      "entities": [
        {
          "title": "mq_producer_log",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "id",
              "pk": true,
              "notNull": true
            },
            {
              "name": "message_id",
              "type": "ID",
              "remark": "",
              "chnname": "消息ID",
              "notNull": true
            },
            {
              "name": "queue_info",
              "type": "remark",
              "remark": "",
              "chnname": "发送队列",
              "notNull": true
            },
            {
              "name": "request_param",
              "type": "text",
              "remark": "",
              "chnname": "请求参数",
              "notNull": true
            },
            {
              "name": "ack",
              "type": "yesOrNo",
              "remark": "",
              "chnname": "是否确认",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "pk": false,
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "pk": false,
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "队列生产日志"
        },
        {
          "title": "mq_consumer_log",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "id",
              "pk": true,
              "notNull": true
            },
            {
              "name": "message_id",
              "type": "ID",
              "remark": "",
              "chnname": "消息ID",
              "notNull": true
            },
            {
              "name": "queue_info",
              "type": "remark",
              "remark": "",
              "chnname": "发送队列",
              "notNull": true
            },
            {
              "name": "request_param",
              "type": "text",
              "remark": "",
              "chnname": "请求参数",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "队列消费日志"
        },
        {
          "title": "mq_consumer_error_log",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "id",
              "pk": true,
              "notNull": true
            },
            {
              "name": "message_id",
              "type": "ID",
              "remark": "",
              "chnname": "消息ID",
              "notNull": true
            },
            {
              "name": "queue_info",
              "type": "remark",
              "remark": "",
              "chnname": "发送队列",
              "notNull": true
            },
            {
              "name": "request_param",
              "type": "text",
              "remark": "",
              "chnname": "请求参数",
              "notNull": true
            },
            {
              "name": "failure_reason",
              "type": "text",
              "remark": "",
              "chnname": "失败原因",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "队列消费失败日志"
        }
      ],
      "graphCanvas": {
        "nodes": [],
        "edges": []
      },
      "associations": []
    },
    {
      "name": "oauth",
      "chnname": "权限管理",
      "entities": [
        {
          "title": "oauth_user",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "ID",
              "pk": true,
              "notNull": true
            },
            {
              "name": "username",
              "type": "shortName",
              "remark": "",
              "chnname": "用户名",
              "notNull": true
            },
            {
              "name": "name",
              "type": "name",
              "remark": "",
              "chnname": "姓名"
            },
            {
              "name": "password",
              "type": "longName",
              "remark": "",
              "chnname": "密码",
              "notNull": true
            },
            {
              "name": "mobile_phone",
              "type": "shortName",
              "remark": "",
              "chnname": "移动电话",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": true
            },
            {
              "name": "modifier",
              "type": "ID",
              "remark": "",
              "chnname": "修改人",
              "notNull": true
            },
            {
              "name": "modify_time",
              "type": "datatime",
              "remark": "",
              "chnname": "修改时间",
              "notNull": true
            },
            {
              "name": "status",
              "type": "type",
              "remark": "",
              "chnname": "状态",
              "notNull": true
            },
            {
              "name": "version",
              "type": "QtyOrLenght",
              "remark": "",
              "chnname": "版本号",
              "notNull": true
            },
            {
              "name": "deleted",
              "type": "yesOrNo",
              "remark": "",
              "chnname": "逻辑删除",
              "notNull": true,
              "defaultValue": "0"
            },
            {
              "name": "org_id",
              "type": "ID",
              "remark": "",
              "chnname": "公司ID",
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "用户信息"
        },
        {
          "title": "oauth_role",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "ID",
              "pk": true,
              "notNull": true
            },
            {
              "name": "code",
              "type": "shortName",
              "remark": "",
              "chnname": "编码",
              "notNull": true
            },
            {
              "name": "name",
              "type": "name",
              "remark": "",
              "chnname": "名称",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": true
            },
            {
              "name": "modifier",
              "type": "ID",
              "remark": "",
              "chnname": "修改人",
              "notNull": true
            },
            {
              "name": "modify_time",
              "type": "datatime",
              "remark": "",
              "chnname": "修改时间",
              "notNull": true
            },
            {
              "name": "status",
              "type": "type",
              "remark": "",
              "chnname": "状态",
              "notNull": true
            },
            {
              "name": "version",
              "type": "QtyOrLenght",
              "remark": "",
              "chnname": "版本号",
              "notNull": true
            },
            {
              "name": "deleted",
              "type": "yesOrNo",
              "remark": "",
              "chnname": "逻辑删除",
              "notNull": true,
              "defaultValue": "0"
            },
            {
              "name": "org_id",
              "type": "ID",
              "remark": "",
              "chnname": "公司ID",
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "角色信息"
        },
        {
          "title": "oauth_user_role",
          "fields": [
            {
              "name": "id",
              "type": "ID",
              "remark": "",
              "chnname": "ID",
              "pk": true,
              "notNull": true
            },
            {
              "name": "user_id",
              "type": "ID",
              "remark": "",
              "chnname": "用户ID",
              "notNull": true
            },
            {
              "name": "role_id",
              "type": "ID",
              "remark": "",
              "chnname": "角色ID",
              "notNull": true
            },
            {
              "name": "creator",
              "type": "ID",
              "remark": "",
              "chnname": "创建人",
              "notNull": true
            },
            {
              "name": "create_time",
              "type": "datatime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": true
            },
            {
              "name": "modifier",
              "type": "ID",
              "remark": "",
              "chnname": "修改人",
              "notNull": true
            },
            {
              "name": "modify_time",
              "type": "datatime",
              "remark": "",
              "chnname": "修改时间",
              "notNull": true
            },
            {
              "name": "status",
              "type": "type",
              "remark": "",
              "chnname": "状态",
              "notNull": true
            },
            {
              "name": "version",
              "type": "QtyOrLenght",
              "remark": "",
              "chnname": "版本号",
              "notNull": true
            },
            {
              "name": "deleted",
              "type": "yesOrNo",
              "remark": "",
              "chnname": "逻辑删除",
              "notNull": true,
              "defaultValue": "0"
            },
            {
              "name": "org_id",
              "type": "ID",
              "remark": "",
              "chnname": "公司ID",
              "notNull": true
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "用户角色信息"
        }
      ],
      "graphCanvas": {
        "nodes": [],
        "edges": []
      },
      "associations": []
    }
  ],
  "dataTypeDomains": {
    "datatype": [
      {
        "name": "国家",
        "code": "country",
        "apply": {
          "MYSQL": {
            "type": "char(2)"
          }
        }
      },
      {
        "name": "类型/性质",
        "code": "type",
        "apply": {
          "MYSQL": {
            "type": "varchar(16)"
          }
        }
      },
      {
        "name": "短名称/简称",
        "code": "shortName",
        "apply": {
          "MYSQL": {
            "type": "varchar(32)"
          }
        }
      },
      {
        "name": "名称",
        "code": "name",
        "apply": {
          "MYSQL": {
            "type": "varchar(64)"
          }
        }
      },
      {
        "name": "编码/代号",
        "code": "code",
        "apply": {
          "MYSQL": {
            "type": "varchar(40)"
          }
        }
      },
      {
        "name": "备注/说明",
        "code": "remark",
        "apply": {
          "MYSQL": {
            "type": "varchar(512)"
          }
        }
      },
      {
        "name": "长名称",
        "code": "longName",
        "apply": {
          "MYSQL": {
            "type": "varchar(128)"
          }
        }
      },
      {
        "name": "文本",
        "code": "text",
        "apply": {
          "MYSQL": {
            "type": "text"
          }
        }
      },
      {
        "name": "日期时间",
        "code": "datatime",
        "apply": {
          "MYSQL": {
            "type": "datetime"
          }
        }
      },
      {
        "name": "是否",
        "code": "yesOrNo",
        "apply": {
          "MYSQL": {
            "type": "bit(1)"
          }
        }
      },
      {
        "name": "ID",
        "code": "ID",
        "apply": {
          "MYSQL": {
            "type": "bigint unsigned"
          }
        }
      },
      {
        "name": "数量/长度",
        "code": "QtyOrLenght",
        "apply": {
          "MYSQL": {
            "type": "int unsigned"
          }
        }
      },
      {
        "name": "重量/体积",
        "code": "WeightOrVol",
        "apply": {
          "MYSQL": {
            "type": "bigint unsigned"
          }
        }
      },
      {
        "name": "金额",
        "code": "amount",
        "apply": {
          "MYSQL": {
            "type": "bigint"
          }
        }
      }
    ],
    "database": [
      {
        "code": "MYSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "fileShow": true,
        "defaultDatabase": true,
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,' ')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,' ') }}';{{=it.separator}}\n$blankline\n",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table PDMAN_UP_{{=it.oldEntity.title}}\nas select * from {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n{{~it.newEntity.indexs:index}}\nALTER TABLE {{=it.newEntity.title}} ADD {{? index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=index.name}}({{=it.func.join(...index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}} {{? it.field.addAfter}}AFTER {{=it.field.addAfter}}{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP {{=it.field.name}};{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}"
      },
      {
        "code": "ORACLE",
        "template": "DROP TABLE {{=it.entity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}  {{= field.pk ? 'NOT NULL' : '' }} {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\nCOMMENT ON TABLE {{=it.entity.title}} IS '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}';{{=it.separator}}\n{{~it.entity.fields:field:index}}\nCOMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS '{{=it.func.join(field.chnname,field.remark,';')}}';{{=it.separator}}\n{{~}}",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/\r\n$blankline",
        "rebuildTableTemplate": "CREATE TABLE PDMAN_UP_{{=it.oldEntity.title}}\nAS SELECT * FROM {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nDROP TABLE {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}{{~it.newEntity.fields:field:index}}{{? field.pk }}{{ pkList.push(field.name) }}{{?}}    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}{{? pkList.length >0 }}    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}}){{?}}\n);{{=it.separator}}\n$blankline\n{{? it.newEntity.chnname || it.newEntity.remark}}COMMENT ON TABLE {{=it.newEntity.title}} IS {{? it.newEntity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.newEntity.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~it.newEntity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.newEntity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~}}\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\n$blankline\nINSERT INTO {{=it.newEntity.title}}(\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}) \nSELECT\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}FROM PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n\nDROP TABLE PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n{{~it.newEntity.indexs:index}}\nCREATE{{? index.isUnique}} UNIQUE{{?}} INDEX {{=index.name}} ON {{=it.newEntity.title}}({{=it.func.join(index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{=it.separator}}{{?}}\r\n$blankline",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP({{=it.field.name}});{{=it.separator}}\r\n$blankline",
        "deleteIndexTemplate": "DROP INDEX {{=it.entity.title}}.{{=it.index.name}};{{=it.separator}}\r\n$blankline",
        "createIndexTemplate": "CREATE{{? it.index.isUnique}} UNIQUE{{?}} INDEX {{=it.index.name}} ON {{=it.entity.title}}({{=it.func.join(it.index.fields,',')}});{{=it.separator}}\r\n$blankline",
        "updateTableComment": "{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline"
      },
      {
        "code": "SQLServer",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'IDENTITY(1,1)' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}  {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    CONSTRAINT PK_{{=it.entity.title}} PRIMARY KEY CLUSTERED ({{~pkList:pkName:i}}{{= pkName }} ASC {{= i<pkList.length-1 ? ',' : '' }}{{~}}) ON [PRIMARY] \n{{?}}\n) ;{{=it.separator}}\n\n$blankline\nEXECUTE sp_addextendedproperty N'MS_Description', '{{= it.entity.chnname || it.entity.remark}}', N'user', N'dbo', N'table', N'{{=it.entity.title}}', NULL, NULL;{{=it.separator}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}EXECUTE sp_addextendedproperty N'MS_Description', {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}}, N'user', N'dbo', N'table', N'{{=it.entity.title}}', N'column', N'{{=field.name}}';{{=it.separator}}{{?}}\n{{~}}\n",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      },
      {
        "code": "PostgreSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table PDMAN_UP_{{=it.oldEntity.title}}\nas select * from {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}} {{? it.field.addAfter}}AFTER {{=it.field.addAfter}}{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP {{=it.field.name}};{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}"
      },
      {
        "code": "JAVA",
        "template": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n\n/** {{=it.entity.chnname}} */\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "createTableTemplate": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      }
    ]
  },
  "profile": {
    "defaultFields": [
      {
        "name": "id",
        "type": "ID",
        "remark": "",
        "chnname": "ID",
        "pk": true,
        "notNull": true
      },
      {
        "name": "creator",
        "type": "ID",
        "remark": "",
        "chnname": "创建人",
        "notNull": true
      },
      {
        "name": "create_time",
        "type": "datatime",
        "remark": "",
        "chnname": "创建时间",
        "notNull": true
      },
      {
        "name": "modifier",
        "type": "ID",
        "remark": "",
        "chnname": "修改人",
        "notNull": true
      },
      {
        "name": "modify_time",
        "type": "datatime",
        "remark": "",
        "chnname": "修改时间",
        "notNull": true
      },
      {
        "name": "status",
        "type": "type",
        "remark": "",
        "chnname": "状态",
        "notNull": true
      },
      {
        "name": "version",
        "type": "QtyOrLenght",
        "remark": "",
        "chnname": "版本号",
        "notNull": true
      },
      {
        "name": "deleted",
        "type": "yesOrNo",
        "remark": "",
        "chnname": "逻辑删除",
        "notNull": true,
        "defaultValue": "0"
      },
      {
        "name": "org_id",
        "type": "ID",
        "remark": "",
        "chnname": "公司ID",
        "notNull": true
      }
    ],
    "defaultFieldsType": "1",
    "javaConfig": {},
    "sqlConfig": ";",
    "dbs": [],
    "wordTemplateConfig": ""
  }
}